<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial Stuff  
travel_speed = 30;
vel_x = 0;
vel_y = 0;
facing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
x = x + vel_x;
y = y + vel_y;

if (x &gt; room_width || x &lt; 0 || y &lt; 0 || y &gt; room_height){
    instance_destroy();
}


var xn=x;
var yn =y;
var collision = 0;
if(check_collision(x+vel_x,y, object_index))
{
    collision+=1;
    while(!check_collision(xn+sign(vel_x),y,object_index))
    {
        xn += sign(vel_x);
    }
}

if(check_collision(x,y+vel_y,object_index))
{
    collision+=2;
    while(!check_collision(x,yn+sign(vel_y),object_index))
    {
        yn += sign(vel_y);
    }
}
if(sign(vel_x&gt;0))
    x=floor(xn);
else
    x = ceil(xn);
if(sign(vel_y&gt;0))
    y=floor(yn);
else
    y= ceil(yn);



if(collision &gt;0)
{
    if(collision &lt;3){
        //show_debug_message(string(collision));
        var inst;
        if(portal_id==0)
        {
            with(obj_portal_left){
                instance_destroy();
            }
            inst = instance_create(x,y,obj_portal_left);
        }else
        {
            with(obj_portal_right){
                instance_destroy();
            }
            inst = instance_create(x,y,obj_portal_right);
            
        }
        
        switch(collision){
            case 1:
                if(vel_x &gt;0)//left facing
                   with(inst){
                   facing=2;
                   }   
                else//right facing
                   with(inst){
                   facing=0;
                   }
                break;
            case 2:
                if(vel_y &gt;0) //up facing
                   with(inst){
                   facing=1;
                   }
                else//down facing
                   with(inst){
                   facing=3;
                   }  
                break;    
            default:
                break;
        }
        with(inst){
            image_angle=90*(facing+1);
            portal_direction = facing;
        }
    }
    instance_destroy();
}
else{
if(collision==3)
    show_debug_message("fizzle");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_portal_clear">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
